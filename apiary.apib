FORMAT: 1A

# Nektria Routing

The Routing Service of RECS API is designed to elaborate and plan optimized deliveries. First, the merchant can identify and 
minimize delivery bottlenecks using our real time incentive proposals for the shoppers. Then, once all the orders have been 
passed, he can retrieve the optimized route to execute the deliveries.

The API is organized in 4 main areas:
- Base Types are defined in the first part, and are made available with requests to validate their elements.
- Configuration and Assets are designed for the day to day management of the client resources used to execute deliveries.
- Service Requests allow to adapt real time proposals so that the shopper is invited to choose delivery time slots that best suits the delivery planning.
- Optimization requests aim to provide optimal routes for executing the deliveries.

## Authentication Schemes

+ Basic (apikey)

    You must provide an API key, which is a unique identifier for your account, as well as an application identifier that helps to
    track which of your applications is making calls to the API.
    + Headers
        + Authorization: Basic YourApiKey


##Group Base Types
## Address [/check/address]
An address contains information about a physical address for pick-up and delivery pruposes

+ Attributes (object)
    + postal_code: 08022 (required, string)
    + street_type: Pza. (optional, string)
    + street_name: Urquinaona (optional, string)
    + street_number: 5 (optional, string)
    + city: Barcelona (optional, string)
    + country_code: ES (required, string)
    + elevator: 1 (optional, number) 
    + coordinates (required)
        + latitude: 41.123456 (required, number)
        + longitude: 2.123456 (required, number)

### Check if an Address is valid [POST /check/address]
+ Attributes (Address)
+ Response 204
    
+ Response 400 (application/json)
    Invalid Address
    + Body
    
            {
                "status": "error",
                "error": "The address is invalid"
            }
    

## Product [/check/product]

+ Attributes (object)
    + name: box (required, string) - should be set to box for Ulabox requests
    + type: dry (required, string) - dry or cold, describes the type of product
    + quantity: 8 (required, number)
    + quantity_estimated: true (optional, boolean)
    + weight_kg: 4.5 (optional, number)

### Check if an Product is valid [POST /check/product]
+ Attributes (Product)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Product / malformatted
    + Body
    
            {
                "status": "error",
                "error": "The product is missing weight information"
            }

## Capacity [/check/capacity]

+ Attributes (object)
    + type: dry (required, string) - dry or cold, describes the type of product it can hold
    + quantity: 8 (required, number) - describes the number of products it can hold

### Check if an Capacity is valid [POST /check/capacity]
+ Attributes (Capacity)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Product / malformatted
    + Body
    
            {
                "status": "error",
                "error": "The capacity is missing quantity information"
            }


## TimeWindow [/time_windows] 

+ Attributes (object)
    + `start_time`: `2016-03-29T15:19:00+01:00` (required, string) ISO8601 time at which the window starts
    + `end_time`: `2016-03-29T15:37:00+01:00` (required, string) ISO8601 time at which the window ends

### Check if a Time Window is valid [POST /check/time_window]
+ Attributes (TimeWindow)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Time Window
    + Body
    
            {
                "status": "error",
                "error": "start time is earlier than end time"
            }

## TimeWindowCost [/time_window_costs] 

+ Attributes (object)
    + `start_time`: `2016-03-29T15:19:00+01:00` (required, string) ISO8601 time at which the window starts
    + `end_time`: `2016-03-29T15:37:00+01:00` (required, string) ISO8601 time at which the window ends
    + `cost`: 90 (required, number) relative estimated cost of delivery during this time window, between 0 and 100.

### Check if a Time Window Cost is valid [POST /check/time_window_cost]
+ Attributes (TimeWindowCost)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Time Window Cost
    + Body
    
            {
                "status": "error",
                "error": "Invalid cost 'low'"
            }

## RecurringTimeWindow [/recurring_time_windows] 

+ Attributes (object)
    + `start_time`: `2016-03-29T15:19:00+01:00` (required, string) ISO8601 time at which the window starts
    + `end_time`: `2016-03-29T15:37:00+01:00` (required, string) ISO8601 time at which the window ends
    + `repeat_every`: weekday (required, string) string defining the frequency of the repeated time window. 
                        Allowed values are never, day, weekday, week, month, year

### Check if a Recurring Time Window is valid [POST /check/recurring_time_window]
+ Attributes (RecurringTimeWindow)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Recurring Time Window
    + Body
    
            {
                "status": "error",
                "error": "Incorrect recurring value"
            }

##Group Configuration & Assets

## Vehicle [/vehicles]    

+ Attributes (object)
    + `vehicle_number`: BCN_VAN_1 (required, string)
    + capacity (required, array[Capacity]) - list describing transportation areas of the vehicle
    + type: van (optional, string)
    + options (optional) 
        + efficiency: 1.2 (optional, number)
        + helpers: 1 (optional, number)

### Check if a Vehicle is valid [POST /check/vehicle]
+ Attributes (Vehicle)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Vehicle
    + Body
    
            {
                "status": "error",
                "error": "Unknown option speed"
            }
    
### List Vehicles [GET /vehicles?type={type}&limit={limit}]
+ Parameters
    + limit (optional, number) - Default 10, from 1 to 100. Number of returned values.
    + type: routing (optional, string) - Filter the services by type

+ Response 200 (application/json)
    + Attributes 
        + list (array[Vehicle])
        

### Get a Vehicle [GET /vehicles/{vehicle_number}]
+ Parameters
    + vehicle_number (required, string) - Vehicle number provided during the vehicle creation request
+ Response 200 (application/json)
    + Attributes (Vehicle)

## Area [/areas]    

+ Attributes (object)
    + `area_number`: BCN (required, string)
    + `postal_codes` (required, array)

### Check if an Area is valid [POST /check/area]

+ Request

    + Attributes (Area)
    + Body

            {
                "area_number" : "BCN_1",
                "postal_codes": [
                    "08001", 
                    "08002", 
                    "08003", 
                    "08004", 
                    "08005", 
                    "08006"
                ]
            }

+ Response 204
            
+ Response 400 (application/json)
    Invalid Area
    + Body
    
            {
                "status": "error",
                "error": "Incorrect postal code"
            }
    
### List Areas [GET /areas?limit={limit}]
+ Parameters
    + limit (optional, number) - Default 10, from 1 to 100. Number of returned values.

+ Response 200 (application/json)
    + Attributes 
        + list (array[])
    
            list of area numbers
        
    + Body
        
            {
                "list": [ 
                    "BCN_MET", 
                    "BCN_HOS",
                    "BCN_BAD"
                ]
            }

### Get an Area [GET /areas/{area_number}]
+ Parameters
    + area_number (required, string) - Unique Area Identifier
+ Response 200 (application/json)
    + Attributes (Area)

##Group Services

## RoutingService [/services/routing]

+ Attributes (object)
    + destination (required, Address) - Submitted delivery address
    + products (required, array[Product]) - Submitted list of products
    + origin (optional, Address) - Submitted overriding default Warehouse address
    + excluded_windows (optional, array[RecurringTimeWindow]) - submitted excluded windows
    + service_number (required, string) service identifier
    + availability (required, boolean) is there some delivery option available ?
    + `proposed_delivery_windows` (required, array[TimeWindowCost])
    + `selected_delivery_windows` (required, array[TimeWindow])
    + status (required, string) - requeted, validated, confirmed or cancelled
    + order_number (optional, string) - related order identification number, if an order has been created
    + created_date (required, string) - date the service has been created, in format YYYY-mm-dd
    + confirmed_date (optional, string) - date the service has been confirmed, in format YYYY-mm-dd
    

### List Routing Services [GET /services/routing?offset={offset}&limit={limit}&status={status}&availability={availability}&created_date={created_date}&confirmed_date={confirmed_date}]
+ Parameters
    + offset (optional, number) - Default 1. Postion of the first returned record.
    + limit (optional, number) - Default 10, from 1 to 100. Number of returned values.
    + status (optional, string) - requested, validated, confirmed or cancelled
    + availability (optional, boolean) - do we have available delivery options ?
    + created_date (optional, string) - date of service creation, in format YYYY-mm-dd
    + confirmed_date(optional, string) - date of service confirmation, in format YYYY-mm-dd

+ Response 200 (application/json)
    + Attributes 
        + list (array[RoutingService])
        
    + Body
    
            {
            "list":[
            {
                "service_number": 4095,
                "availability": true,
                "status": "requested",
                "created_date": "2016-05-12",
                "destination": {
                    "postal_code": "08022",
                    "street_type": "Pza.",
                    "street_name": "Urquinaona",
                    "street_number": "5",
                    "city": "Barcelona",
                    "country_code": "ES",
                    "elevator": true,
                    "coordinates": {
                      "latitude": 41.123456,
                      "longitude": 2.123456
                    }
                },
              "products": [
                {
                  "name": "box",
                  "quantity": 8,
                  "weight_kg": 4.5
                }
              ],
              "excluded": [{
                  "start_time": "2016-05-07T14:00:00+0200",
                  "end_time": "2016-05-07T19:00:00+0200",
                  "repeat_every": "month"
                }],
                "proposed_delivery_windows": [
                    {
                        "start_time": "2016-03-14T07:00:00+0100",
                        "end_time": "2016-03-14T09:00:00+0100",
                        "cost": 76
                    },
                    {
                        "start_time": "2016-03-14T08:00:00+0100",
                        "end_time": "2016-03-14T10:00:00+0100",
                        "cost": 77
                    },
                    {
                        "start_time": "2016-03-14T09:00:00+0100",
                        "end_time": "2016-03-14T11:00:00+0100",
                        "cost": 78
                    },
                    {
                        "start_time": "2016-03-14T10:00:00+0100",
                        "end_time": "2016-03-14T12:00:00+0100",
                        "cost": 80
                    },
                    {
                        "start_time": "2016-03-14T11:00:00+0100",
                        "end_time": "2016-03-14T13:00:00+0100",
                        "cost": 93
                    }
                ]
            }
            ]
                
            }


### Create Routing Service [POST /services/routing]

+ Request (application/json)

+ Attributes
    + destination (required, Address)
    + products (required, array[Product])
    + origin (optional, Address) - Overrides the default Warehouse address
    + excluded (optional, array[RecurringTimeWindow]) - exclude delivery hours within recurring time slot

+ Response 201 (application/json)
  Service has been successfully requested
    
    + Attributes
        + RoutingService

    + Body
    
            {
                "service_number": 4095,
                "availability": true,
                "status": "requested",
                "created_date": "2016-05-12",
                "destination": {
                    "postal_code": "08022",
                    "street_type": "Pza.",
                    "street_name": "Urquinaona",
                    "street_number": "5",
                    "city": "Barcelona",
                    "country_code": "ES",
                    "elevator": true,
                    "coordinates": {
                      "latitude": 41.123456,
                      "longitude": 2.123456
                    }
                },
              "products": [
                {
                  "name": "box",
                  "quantity": 8,
                  "weight_kg": 4.5
                }
              ],
              "excluded": [{
                  "start_time": "2016-05-07T14:00:00+0200",
                  "end_time": "2016-05-07T19:00:00+0200",
                  "repeat_every": "month"
                }],
                "proposed_delivery_windows": [
                    {
                        "start_time": "2016-03-14T07:00:00+0100",
                        "end_time": "2016-03-14T09:00:00+0100",
                        "cost": 76
                    },
                    {
                        "start_time": "2016-03-14T08:00:00+0100",
                        "end_time": "2016-03-14T10:00:00+0100",
                        "cost": 77
                    },
                    {
                        "start_time": "2016-03-14T09:00:00+0100",
                        "end_time": "2016-03-14T11:00:00+0100",
                        "cost": 78
                    },
                    {
                        "start_time": "2016-03-14T10:00:00+0100",
                        "end_time": "2016-03-14T12:00:00+0100",
                        "cost": 80
                    },
                    {
                        "start_time": "2016-03-14T11:00:00+0100",
                        "end_time": "2016-03-14T13:00:00+0100",
                        "cost": 93
                    }
                ]
            }
            

### Book Routing Service [PATCH /services/routing/{service_id}/book]

+ Parameters
    + service_id (required, string)

+ Request (application/json)

        {
            "delivery_windows":[
                {
                    "start_time": "2016-03-14T19:00:00+0100",
                    "end_time": "2016-03-14T21:00:00+0100"
                }
            ]
        }
        
    + Attributes
        + delivery_windows (required, array[TimeWindow]) - the selected delivery time windows

+ Response 200 (application/json)
  Service has been successfully requested
    
    + Attributes
        + RoutingService

    + Body
    
            {
                "service_number": 4095,
                "availability": true,
                "status": "booked",
                "created_date": "2016-05-12",
                "destination": {
                    "postal_code": "08022",
                    "street_type": "Pza.",
                    "street_name": "Urquinaona",
                    "street_number": "5",
                    "city": "Barcelona",
                    "country_code": "ES",
                    "elevator": true,
                    "coordinates": {
                      "latitude": 41.123456,
                      "longitude": 2.123456
                    }
                },
              "products": [
                {
                  "name": "box",
                  "quantity": 8,
                  "weight_kg": 4.5
                }
              ],
              "excluded": [{
                  "start_time": "2016-05-07T14:00:00+0200",
                  "end_time": "2016-05-07T19:00:00+0200",
                  "repeat_every": "month"
                }],
                "proposed_delivery_windows": [
                    {
                        "start_time": "2016-03-14T07:00:00+0100",
                        "end_time": "2016-03-14T09:00:00+0100",
                        "cost": 76
                    },
                    {
                        "start_time": "2016-03-14T08:00:00+0100",
                        "end_time": "2016-03-14T10:00:00+0100",
                        "cost": 77
                    },
                    {
                        "start_time": "2016-03-14T09:00:00+0100",
                        "end_time": "2016-03-14T11:00:00+0100",
                        "cost": 78
                    },
                    {
                        "start_time": "2016-03-14T10:00:00+0100",
                        "end_time": "2016-03-14T12:00:00+0100",
                        "cost": 80
                    },
                    {
                        "start_time": "2016-03-14T11:00:00+0100",
                        "end_time": "2016-03-14T13:00:00+0100",
                        "cost": 93
                    }
                ],
                "selected_delivery_windows":[
                    {
                        "start_time": "2016-03-14T07:00:00+0100",
                        "end_time": "2016-03-14T09:00:00+0100"
                    }
                ]
            }

### Confirm Routing Service [PATCH /services/routing/{service_id}/confirm]

+ Parameters
    + service_id (required, string)

+ Request (application/json)

        {
            "order_number": "LP22842-U",
            "delivery_windows":[
                {
                    "start_time": "2016-03-14T19:00:00+0100",
                    "end_time": "2016-03-14T21:00:00+0100"
                }
            ]
        }
        
    + Attributes
        + order_number (required, string) - the order number in Ulabox servers
        + delivery_windows (required, array[TimeWindow]) - the selected delivery time windows
        
+ Response 201 (application/json)
  Service has been successfully requested
    
    + Attributes
        + RoutingService

    + Body
    
            {
                "service_number": 4095,
                "availability": true,
                "status": "confirmed",
                "created_date": "2016-05-12",
                "destination": {
                    "postal_code": "08022",
                    "street_type": "Pza.",
                    "street_name": "Urquinaona",
                    "street_number": "5",
                    "city": "Barcelona",
                    "country_code": "ES",
                    "elevator": true,
                    "coordinates": {
                      "latitude": 41.123456,
                      "longitude": 2.123456
                    }
                },
              "products": [
                {
                  "name": "box",
                  "quantity": 8,
                  "weight_kg": 4.5
                }
              ],
              "excluded": [{
                  "start_time": "2016-05-07T14:00:00+0200",
                  "end_time": "2016-05-07T19:00:00+0200",
                  "repeat_every": "month"
                }],
                "proposed_delivery_windows": [
                    {
                        "start_time": "2016-03-14T07:00:00+0100",
                        "end_time": "2016-03-14T09:00:00+0100",
                        "cost": 76
                    },
                    {
                        "start_time": "2016-03-14T08:00:00+0100",
                        "end_time": "2016-03-14T10:00:00+0100",
                        "cost": 77
                    },
                    {
                        "start_time": "2016-03-14T09:00:00+0100",
                        "end_time": "2016-03-14T11:00:00+0100",
                        "cost": 78
                    },
                    {
                        "start_time": "2016-03-14T10:00:00+0100",
                        "end_time": "2016-03-14T12:00:00+0100",
                        "cost": 80
                    },
                    {
                        "start_time": "2016-03-14T11:00:00+0100",
                        "end_time": "2016-03-14T13:00:00+0100",
                        "cost": 93
                    }
                ],
                "selected_delivery_windows":[
                    {
                        "start_time": "2016-03-14T07:00:00+0100",
                        "end_time": "2016-03-14T09:00:00+0100"
                    }
                ],
                "order_number":"XHKL-5429",
                "confirmed_date": "2016-05-12"
            }
            


##Group Optimization

## Step [/steps] 

+ Attributes (object)
    + `delivery_window` (required, TimeWindow) order delivery window
    + `order` (required, Order) order coverd by this step
    + `estimated_delivery_time` (optional, string)
    + `estimated_delivery_duration` (optional, string)
    + `delivery_time` (optional, string)
    + `delivery_duration` (optional, string)

### Check if a Step is valid [POST /check/step]
+ Attributes (Step)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Step
    + Body
    
            {
                "status": "error",
                "error": "unknown order reference"
            }

## Order [/orders]    

+ Attributes (object)
    + order_number: AA123456 (required, string)
    + products (required, array[Product])
    + origin (optional, Address)
    + destination (required, Address)
    + `delivery_windows` (required, array[TimeWindow])
    + shift (optional, Shift)
    + status (required, string)
    

### Check if an Order is valid [POST /check/order]
+ Attributes (Order)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Order
    + Body
    
            {
                "status": "error",
                "error": "The order is invalid"
            }
    


### Create an Order [POST /orders]
+ Request (application/json)
+ Attributes (object)
    + order_number: AA123456 (required, string)
    + destination (required, Address)
    + products (array[Product])
    + origin (optional, Address)
    + `delivery_windows` (required, array[TimeWindow])
    + auto_assign_shift (optional, boolean)
    
    
+ Response 201 (application/json)
    Returned on creation success  
    + Attributes (Order)
    + Headers
    
            Location: /orders/{order_number}

+ Response 400
    Returned if there is any parameter missing or with wrong type or format
    + Body
+ Response 409
    Returned if there is already an order with the same order_number
    + Body
+ Response 500
    Returned if an error occurred storing the order
    + Body

### List Orders [GET /orders?limit={limit}&offset={offset}&status={status}&created_date={created_date}&delivery_day={delivery_day}]
+ Parameters
    + limit (optional, number) - Default 10, from 1 to 100. Number of returned values.
    + offset (optional, number) - Default 0. Start point of the returned array.
    + status (optional, string) - filter orders by status
    + created_date (optional, string) - Date in format YYYY-MM-DD. Filter orders starting from creation date.
    + delivery_day (optional, string) - Date in format YYYY-MM-DD. Filter orders with delivery programmed for delivery day.

+ Response 200 (application/json)

    + Attributes
        + list (array[Order])
        
    + Body
    
            {
                "list": 
                [
                    {
                      "order_number": "AA123456",
                      "destination": {
                        "postal_code": "08022",
                        "street_type": "Pza.",
                        "street_name": "Urquinaona",
                        "street_number": "5",
                        "city": "Barcelona",
                        "country_code": "ES",
                        "elevator": 1,
                        "coordinates": {
                          "latitude": 41.123456,
                          "longitude": 2.123456
                        }
                      },
                      "status": "pending",
                      "delivery_windows": [
                        {
                          "start_time": "2016-03-29T15:19:00+01:00",
                          "end_time": "2016-03-29T15:37:00+01:00"
                        }
                      ],
                      "products": [
                        {
                          "name": "box",
                          "type": "dry",
                          "quantity": 8,
                          "quantity_estimated": true,
                          "weight_kg": 4.5
                        }
                      ],
                      "origin": {
                        "postal_code": "08022",
                        "street_type": "Pza.",
                        "street_name": "Urquinaona",
                        "street_number": "5",
                        "city": "Barcelona",
                        "country_code": "ES",
                        "elevator": 1,
                        "coordinates": {
                          "latitude": 41.123456,
                          "longitude": 2.123456
                        }
                      },
                      "shift": 123
                    },
                    {
                      "order_number": "AA123678",
                      "destination": {
                        "postal_code": "08022",
                        "street_type": "Pza.",
                        "street_name": "Urquinaona",
                        "street_number": "5",
                        "city": "Barcelona",
                        "country_code": "ES",
                        "elevator": 1,
                        "coordinates": {
                          "latitude": 41.123456,
                          "longitude": 2.123456
                        }
                      },
                      "status": "pending",
                      "delivery_windows": [
                        {
                          "start_time": "2016-03-29T15:19:00+01:00",
                          "end_time": "2016-03-29T15:37:00+01:00"
                        }
                      ],
                      "products": [
                        {
                          "name": "box",
                          "type": "dry",
                          "quantity": 8,
                          "quantity_estimated": true,
                          "weight_kg": 4.5
                        }
                      ],
                      "origin": {
                        "postal_code": "08022",
                        "street_type": "Pza.",
                        "street_name": "Urquinaona",
                        "street_number": "5",
                        "city": "Barcelona",
                        "country_code": "ES",
                        "elevator": 1,
                        "coordinates": {
                          "latitude": 41.123456,
                          "longitude": 2.123456
                        }
                      },
                      "shift": 123
                    }
                ]
            }
    
### Get an Order [GET /orders/{order_number}]
+ Parameters
    + order_number (required, string) - Order ID provided during the order creation request
+ Response 200 (application/json)
    + Attributes (Order)

### Update an Order [PUT /orders/{order_number}]
+ Parameters
    + order_number (required, string) - Order id provided during the order creation request
    
+ Request (application/json)
    + Attributes (object)
        + destination (required, Address)
        + products (array[Product])

+ Response 200 (application/json)
    Update successful
    + Attributes (Order)

+ Response 400
    There are missing parameters or with wrong type/format
    + Body

+ Response 404
    Returned if there is no order with the specified order_number
    + Body

+ Response 500
    Returned if an error occurred updating the order
    + Body
        
### Process an Order [PATCH /orders/{order_number}/process]
+ Parameters
    + order_number (required, string) - Order id provided during the order creation request
    
+ Request (application/json)
    + Attributes (object)
        + `estimated_delivery_time`(optional, string)
        + `estimated_delivery_duration`(optional, string)

+ Response 200 (application/json)
    Process action successful
    + Attributes (Order)

+ Response 400
    There are missing parameters or with wrong type/format
    + Body

+ Response 404
    Returned if there is no order with the specified order_number
    + Body

+ Response 500
    Returned if an error occurred updating the order
    + Body
    
### Deliver an Order [PATCH /orders/{order_number}/deliver]
+ Parameters
    + order_number (required, string) - Order id provided during the order creation request
    
+ Request (application/json)
    + Attributes (object)
        + `delivery_time`(optional, string)
        + `delivery_duration`(optional, string)

+ Response 200 (application/json)
    Deliver action successful
    + Attributes (Order)

+ Response 400
    There are missing parameters or with wrong type/format
    + Body

+ Response 404
    Returned if there is no order with the specified order_number
    + Body

+ Response 500
    Returned if an error occurred updating the order
    + Body

### Delete an Order [DELETE /orders/{order_number}]
+ Parameters
    + order_number (required, string) - Order id provided during the order creation request

+ Response 204

+ Response 404
    Returned if there is no order with the specified order_number
    + Body

+ Response 500
    Returned if an error occurred deleting the order
    + Body
    

## Route [/routes]    

+ Attributes (object)
    + `route_number`: 783 (required, string)
    + origin (required, Address)
    + `loading_window` (required, TimeWindow)
    + `execution_window` (required, TimeWindow)
    + vehicle (required, Vehicle)
    + itinerary (required, array[Step])
    + status: done (required, string)

### Check if a Route is valid [POST /check/route]
+ Attributes (Route)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Route
    + Body
    
            {
                "status": "error",
                "error": "Unknown vehicle BCN_VAN_15"
            }
    
### List Routes [GET /routes?status={status}&limit={limit}]
+ Parameters
    + limit (optional, number) - Default 10, from 1 to 100. Number of returned values.
    + status: pending (optional, string) - Filter the routes by status

+ Response 200 (application/json)
    + Attributes 
        + list (array[Route])
        

### Get a Route [GET /routes/{route_number}]
+ Parameters
    + route_number (required, string) - Route unique identification number
+ Response 200 (application/json)
    + Attributes (Route)

## Shift [/shifts]

A Shift groups the orders of a specific time range and area, and has relationships with the resources that are assigned to fullfill these orders.

+ Attributes (object)
    + shift_id: 123 (required, number) Unique shift identifier
    + name: `2016-03-29 mañana` (optional, string) Custom name of this shift
    + time_span (required, TimeWindow)
    + status: pending (required, string) shift status
    + fleet (required, array[Vehicle]) list of vehicles assigned to this shift
    + area_number: BCN (required, string) unique identifier of shift area
    + time_slots (required, array[TimeWindow]) delivery time windows proposed to the shopper
    + order_numbers (required, array[string]) list of orders assigned to this shift

### List Shifts [GET /shifts?limit={limit}&expand={expand}&area_number={area_number}&status={status}]

+ Parameters
    + limit (optional, number) - Default 10, from 1 to 100. Number of returned values.
    + expand: false (optional, boolean) - When true, returns entire shift objects.
    + area_number: BCN (optional, string) - filter shift of an area
    + status: pending (optional, string) - filter shift by status

+ Response 200 (application/json)

    + Attributes
        + list (array[Shift])
        
    + Body
    
            {
                "list": [
                    {
                        "shift_id": 1,
                        "name": "2016-03-29 mañana",
                        "span": 
                        {
                            "start_time": "2016-03-14T07:00:00+0100",
                            "end_time": "2016-03-14T15:00:00+0100"
                        },
                        "status": "closed"
                    },
                    {
                        "shift_id": 2,
                        "name": "2016-03-29 tarde",
                        "span":
                        {
                            "start_time": "2016-03-14T15:00:00+0100",
                            "end_time": "2016-03-14T23:00:00+0100"
                        },
                        "status": "pending"
                    }
                ]
            }


### Get a Shift [GET /shifts/{shift_id}]

+ Parameters
    + shift_id (required, string) - Id of the shift, retrievable with a GET request.

+ Request (application/json)
        
+ Response 200 (application/json)
        
        {
            "span":
            {
                "start_time": "2016-03-17T15:00:00+0100",
                "end_time": "2016-03-17T23:00:00+0100"
            },
            "status": "optimized",
            "area": "BCN",
            "fleet":
            [
                {
                    "vehicle_number": "BCN_VAN_1",
                    "capacities" : 
                    [
                        {
                            "type": "dry",
                            "quantity": 30
                        },
                        {
                            "type": "cold",
                            "quantity": 30
                        }
                    ]
                },
                {
                    "vehicle_number": "BCN_VAN_2",
                    "capacities" : 
                    [
                        {
                            "type": "dry",
                            "quantity": 30
                        },
                        {
                            "type": "cold",
                            "quantity": 30
                        }
                    ],
                    "options":
                    {
                        "helpers": 1
                    }
                }
            ],
            "time_slots":
            [
                {
                    "start_time": "2016-03-17T15:00:00+0100",
                    "end_time": "2016-03-17T27:00:00+0100"
                },
                {
                    "start_time": "2016-03-17T16:00:00+0100",
                    "end_time": "2016-03-17T28:00:00+0100"
                },
                {
                    "start_time": "2016-03-17T16:00:00+0100",
                    "end_time": "2016-03-17T21:00:00+0100"
                }
            ],
            "order_numbers":["UMX-324", "UMX-309", "UMX-343"]
        }
        
+ Response 404
    Shift does not exist
    + Body
       


### Close a Shift [PATCH /shifts/{shift_id}/close]

+ Parameters
    + shift_id (required, string)

+ Request (application/json)
        
+ Response 200 (application/json)
    + Attributes (Shift)
    + Body
    
            {
                "span":
                {
                    "start_time": "2016-03-17T15:00:00+0100",
                    "end_time": "2016-03-17T23:00:00+0100"
                },
                "status": "closed",
                "area": "BCN",
                "fleet":
                [
                    {
                        "vehicle_number": "BCN_VAN_1",
                        "capacities" : 
                        [
                            {
                                "type": "dry",
                                "quantity": 30
                            },
                            {
                                "type": "cold",
                                "quantity": 30
                            }
                        ]
                    },
                    {
                        "vehicle_number": "BCN_VAN_2",
                        "capacities" : 
                        [
                            {
                                "type": "dry",
                                "quantity": 30
                            },
                            {
                                "type": "cold",
                                "quantity": 30
                            }
                        ],
                        "options":
                        {
                            "helpers": 1
                        }
                    }
                ],
                "time_slots":
                [
                    {
                        "start_time": "2016-03-17T15:00:00+0100",
                        "end_time": "2016-03-17T27:00:00+0100"
                    },
                    {
                        "start_time": "2016-03-17T16:00:00+0100",
                        "end_time": "2016-03-17T28:00:00+0100"
                    },
                    {
                        "start_time": "2016-03-17T16:00:00+0100",
                        "end_time": "2016-03-17T21:00:00+0100"
                    }
                ],
                "order_numbers":["UMX-324", "UMX-309", "UMX-343"]
            }
    
    
+ Response 404


### Optimize a Shift [PATCH /shifts/{shift_id}/optimize]

Once the shift optimization has been completed, an event will be triggered.

+ Parameters
    + shift_id (required, string)
        
+ Request (application/json)
        
+ Response 200 (application/json)
    + Attributes (Shift)
    + Body
    
            {
                "span":
                {
                    "start_time": "2016-03-17T15:00:00+0100",
                    "end_time": "2016-03-17T23:00:00+0100"
                },
                "status": "optimizing",
                "area": "BCN",
                "fleet":
                [
                    {
                        "vehicle_number": "BCN_VAN_1",
                        "capacities" : 
                        [
                            {
                                "type": "dry",
                                "quantity": 30
                            },
                            {
                                "type": "cold",
                                "quantity": 30
                            }
                        ]
                    },
                    {
                        "vehicle_number": "BCN_VAN_2",
                        "capacities" : 
                        [
                            {
                                "type": "dry",
                                "quantity": 30
                            },
                            {
                                "type": "cold",
                                "quantity": 30
                            }
                        ],
                        "options":
                        {
                            "helpers": 1
                        }
                    }
                ],
                "time_slots":
                [
                    {
                        "start_time": "2016-03-17T15:00:00+0100",
                        "end_time": "2016-03-17T27:00:00+0100"
                    },
                    {
                        "start_time": "2016-03-17T16:00:00+0100",
                        "end_time": "2016-03-17T28:00:00+0100"
                    },
                    {
                        "start_time": "2016-03-17T16:00:00+0100",
                        "end_time": "2016-03-17T21:00:00+0100"
                    }
                ],
                "order_numbers":["UMX-324", "UMX-309", "UMX-343"]
            }
    
        
+ Response 404

### Get Shift Roadmap [GET /shifts/{shift_id}/roadmap]
        
+ Response 200 (application/json)
        
        {
            "unreached_orders": ["UXW-5732", "UXW-5749"],
            "unused_vehicles": [],
            "routes": 
            [
                {
                    "route_number": 7654,
                    "delivery_window": 
                    {
                        "start_time": "2016-03-17T09:00:00+0100",
                        "end_time": "2016-03-17T12:15:00+0100"
                    },
                    "vehicle": 
                    {
                        "vehicle_numnber": "BCN_VAN_1",
                        "capacities" : 
                        [
                            {
                                "type": "dry",
                                "quantity": 30
                            },
                            {
                                "type": "cold",
                                "quantity": 30
                            }
                        ]
                    }
                },
                {
                    "route_number": 7655,
                    "delivery_window": 
                    {
                        "start_time": "2016-03-17T09:10:00+0100",
                        "end_time": "2016-03-17T11:45:00+0100"
                    },
                    "vehicle": 
                    {
                        "vehicle_numnber": "BCN_VAN_2",
                        "capacities" : 
                        [
                            {
                                "type": "dry",
                                "quantity": 30
                            },
                            {
                                "type": "cold",
                                "quantity": 30
                            }
                        ],
                        "options":
                        {
                            "helpers": 1
                        }
                    }
                }
            ]
        }
        
+ Response 404